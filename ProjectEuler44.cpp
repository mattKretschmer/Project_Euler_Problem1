/*  --------- Project Euler Number 44 -----------
		//Pentagon Numbers
		
		Problem Statement-
	
	
	Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

	*/
//Generate a number, and search all possible combinations less than it?
//Solution: The Value of D is equal to 5482660

 #include <iostream> 
 long make_pentagonal(long n);
 
 int main()
 {
 
 	long n = 1, m, diff,sum,Pn,Qm;
 	bool both_pentagonal = false;
 	
 	while(both_pentagonal ==false)
 	{
 		m = n-1;
 		Pn = make_pentagonal(n);
 		while(m>1)
 		{
 			Qm = make_pentagonal(m);
 			sum = Qm + Pn;
 			diff =Pn - Qm;
 			if(is_pentagon(sum) ==true && is_pentagon(diff)==true)
 			{
 				both_pentagonal =true;
 				std::cout<<diff<<" "<<sum<<" "<<Pn<<" "<<Qm<<" "<<m<<" "<<n<<std::endl;
 				break;
 			}
 			m--;
 		}
 		n++;
 	}
 	std::cout<<"The Value of D is equal to "<<diff<<std::endl;
 
 }
 
 long make_pentagonal(long n){return n*(3*n-1)/2;}